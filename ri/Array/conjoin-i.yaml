--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: (i, *slice(i,2))
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "This is more advanced form of #join. It allows for fine control of separators."
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "NOTE: The old version used to default its separator to &quot;, &quot; and default the terminating separator to &quot; and &quot;. This is no longer the case. You must specifically provide these parameters."
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  [1,2,3].conjoin\n  =&gt; &quot;123&quot;\n\n  [1,2,3].conjoin(', ', ' and ')\n  =&gt; &quot;1, 2 and 3\n\n  [1,2,3].conjoin(', ', :last =&gt; ' or ')\n  =&gt; &quot;1, 2 or 3\n\n  [1,2,3].conjoin('; ', -1 =&gt; ' &amp; ')\n  =&gt; &quot;1; 2 &amp; 3\n\n  [1,2,3,4].conjoin{ |i, a, b| i % 2 == 0 ? '.' : '-' }\n  =&gt; &quot;1.2-3.4&quot;\n\n  [1,1,2,2].conjoin{ |i, a, b| a == b ? '=' : '!=' }\n  =&gt; &quot;1=1!=2=2&quot;\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  body: "CREDIT: Trans"
full_name: Array#conjoin
is_singleton: false
name: conjoin
params: (*args, &block) {|i, *slice(i,2)| ...}
visibility: public

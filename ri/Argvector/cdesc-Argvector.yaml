--- !ruby/object:RDoc::RI::ClassDescription 
attributes: 
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  name: argv
  rw: R
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  name: arity
  rw: R
- !ruby/object:RDoc::RI::Attribute 
  comment: 
  name: line
  rw: R
class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: new
- !ruby/object:RDoc::RI::MethodSummary 
  name: parameters
comment: 
- !ruby/struct:RDoc::Markup::Flow::H 
  level: 1
  text: Argvector
- !ruby/struct:RDoc::Markup::Flow::P 
  body: Argvector provides a very simple means of parsing command line arguments.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: Unlike other more complex libs this provides only the most basic and standard parsing functionality. In many cases that's all one really needs.
- !ruby/struct:RDoc::Markup::Flow::P 
  body: Usage is straight foward. Simply instantiate the class and query it for the particular &quot;views&quot; of the command line you want.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  body: "  cargs = Argvector.new(&quot;-a foo -b=2&quot;)\n\n  cargs.parameters    #=&gt; [['foo'],{'a'=&gt;true,'b'=&gt;'2'}]\n  cargs.flags         #=&gt; ['a']\n  cargs.preoptions    #=&gt; {'a'=&gt;true}\n  cargs.preflags      #=&gt; ['a']\n  cargs.subcommand    #=&gt; ['foo',{'b'=&gt;'2'}]\n"
constants: []

full_name: Argvector
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: arguments
- !ruby/object:RDoc::RI::MethodSummary 
  name: assoc_options
- !ruby/object:RDoc::RI::MethodSummary 
  name: flags
- !ruby/object:RDoc::RI::MethodSummary 
  name: format_options
- !ruby/object:RDoc::RI::MethodSummary 
  name: multi_flag
- !ruby/object:RDoc::RI::MethodSummary 
  name: operands
- !ruby/object:RDoc::RI::MethodSummary 
  name: options
- !ruby/object:RDoc::RI::MethodSummary 
  name: parameters
- !ruby/object:RDoc::RI::MethodSummary 
  name: parameters_without_duplicates
- !ruby/object:RDoc::RI::MethodSummary 
  name: parse
- !ruby/object:RDoc::RI::MethodSummary 
  name: parse_arity
- !ruby/object:RDoc::RI::MethodSummary 
  name: parse_line
- !ruby/object:RDoc::RI::MethodSummary 
  name: parse_preoptions
- !ruby/object:RDoc::RI::MethodSummary 
  name: preflags
- !ruby/object:RDoc::RI::MethodSummary 
  name: preoptions
- !ruby/object:RDoc::RI::MethodSummary 
  name: subcommand
- !ruby/object:RDoc::RI::MethodSummary 
  name: subcommand_with_arguments
- !ruby/object:RDoc::RI::MethodSummary 
  name: subcommand_with_parameters
- !ruby/object:RDoc::RI::MethodSummary 
  name: subcommand_with_preoptions
name: Argvector
superclass: Object

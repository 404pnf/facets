<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>blog.crantastic.org</title>
 <link href="http://blog.crantastic.org/atom.xml" rel="self"/>
 <link href="http://blog.crantastic.org/"/>
 <updated>2009-11-11T08:00:56-05:00</updated>
 <id>http://blog.crantastic.org/</id>

 
 <entry>
   <title>Facets 2.8 Release</title>
   <link href="/2009/11/09/release-2-8.html"/>
   <updated>2009-11-09T00:00:00-05:00</updated>
   <id>/2009/11/09/release-2-8</id>
   <content type="html">&lt;p&gt;Facets 2.8 effectively completes the MORE library clean-up which peaked
with the previous 2.7 release. In so doing, five additional libraries
have been deprecated:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fileable.rb    (too esoteric)&lt;/li&gt;
&lt;li&gt;ioredirect.rb  (needs better implementation)&lt;/li&gt;
&lt;li&gt;coroutine.rb   (because of Fiber)&lt;/li&gt;
&lt;li&gt;capsule.rb     (may be spun-off)&lt;/li&gt;
&lt;li&gt;recorder.rb    (may be spun-off)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Three other libraries have been deprecated, but have been spun-off
to the new 'ansi' project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ansicode.rb&lt;/li&gt;
&lt;li&gt;progressbar.rb&lt;/li&gt;
&lt;li&gt;logger.rb&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This version of Facets also reverts a few of the deprecations made before --
reconsiderations made due to analysis of the code as suitable for release
as separate projects. These libs will thus remain in Facets's MORE library
at least for the forseeable future.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ini.rb&lt;/li&gt;
&lt;li&gt;linkedlist.rb&lt;/li&gt;
&lt;li&gt;matcher.rb&lt;/li&gt;
&lt;li&gt;memoizer.rb&lt;/li&gt;
&lt;li&gt;roman.rb&lt;/li&gt;
&lt;li&gt;semaphore.rb&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Other minor enhancements have also been made in the release. These include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kernel#extend can now take a block&lt;/li&gt;
&lt;li&gt;Fixed kernel#d so it is useable&lt;/li&gt;
&lt;li&gt;Added method #at_rand to Range in random.rb (thanks to Tyler Rick).&lt;/li&gt;
&lt;li&gt;Added method #map_detect to Enumerable (thanks to Scott Taylor).&lt;/li&gt;
&lt;li&gt;Added method #/ to String, which calls File.join.&lt;/li&gt;
&lt;li&gt;Added method #newlines and #cleanlines to String.&lt;/li&gt;
&lt;li&gt;String#titlecase now handles apostrophes.&lt;/li&gt;
&lt;li&gt;BasicObject/BlankSlate is more compliant with 1.9.1's design.&lt;/li&gt;
&lt;li&gt;Enumerable#count can take multiple items, treats them as a logical Or.&lt;/li&gt;
&lt;li&gt;Class#class_extend extends class level, rather than use class_eval.&lt;/li&gt;
&lt;li&gt;Integer#succ(n) becomes Fixnum#succ(n) in succ.rb.&lt;/li&gt;
&lt;li&gt;inheritor.rb has been rewritten.&lt;/li&gt;
&lt;li&gt;The Shellwords extensions have been reworked.&lt;/li&gt;
&lt;li&gt;Added #similarity method to String.&lt;/li&gt;
&lt;li&gt;Added a Levenshtein edit_distance method to String.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In addition to all this, we have recently set up a new Ruby 1.9 compliance procedure
using RunCodeRun.com. Actually RunCodeRun helps us to ensure 1.8.6 compabiltiy as well.
This is great tool for improving code quality, and comes highly recommended.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Facets 2.7 is a Significant Release</title>
   <link href="/2009/08/22/release-2-7.html"/>
   <updated>2009-08-22T00:00:00-04:00</updated>
   <id>/2009/08/22/release-2-7</id>
   <content type="html">&lt;p&gt;Facets 2.7 is most significant release of Facets since 2.4. Rather then trickle-release
these changes over the course of the 2.6.x series, I made the decision to let 2.7 have them
all at once. In so doing this release nearly completes the process of trimming down
the MORE library to its essentials. Over 40 high-level libraries have been spun-off
as separate gems and/or deprecated. No doubt this is a big change for Facets, and the
transition may be a bit bumpy over the short-term, but I am certain that in the long-run
everyone involved will be better served. To help, I have listed the effected libraries
and the alternate gems available to take their place.&lt;/p&gt;

&lt;p&gt;A few other changes have also been made in the release that may also effect your code.
In particular you should note that #class_extension has been renamed to #class_extend
(require 'facets/class_extend'). In addition we have added a few new core methods such
as Exception#raised? and Symbol#thrown?.&lt;/p&gt;

&lt;h2&gt;Spun-Off Projects&lt;/h2&gt;

&lt;p&gt;These libraries have been deprecated from Facets entirely, but are available
as separate gems (or soon will be).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LIBRARY               GEM
-------------------   -------------------------
overload.rb           overload
binreadable.rb        binaryio
downloader.rb         downloader
xoxo.rb               xoxo
bicrypt.rb            bicrypt
typecast.rb           typecast
association.rb        association
syncarray.rb          sync
synchash.rb           sync
paramix.rb            paramix
crypt.rb              crypt3
lrucache.rb           lrucache
net/smtp_tls.rb       smtp_tls
advisable.rb          advisable
buildable.rb          buildable
memoizer.rb           memoizer
harray.rb             sparray
sparse_array.rb       sparray
iteration.rb          iteration
interval.rb           stick
infinity.rb           stick
pool.rb               pool
linkedlist.rb         linkedlist
semaphore.rb          semaphore
pqueue.rb             pqueue
censor.rb             language
macther.rb            language
basex.rb              radix
minitar.rb            archive-tar-minitar, folio
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Spun-Off But Still Available&lt;/h2&gt;

&lt;p&gt;These libraries have been spun-off into stand-alone gems, but remain
available via Facets too. Ultimately some of these will be removed
from Facets too (in particular the ansi libraries).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LIBRARY               GEM
-------------------   -------------------------
ansicode.rb           ansi
progressbar.rb        ansi
logger.rb             ansi
tracepoint.rb         tracepoint
dictionary.rb         dictionary
recorder.rb           recorder
ostructable.rb        ostructable, openhash
openobject.rb         openhash
opencollection.rb     openhash
opencascade.rb        openhash
openhash.rb           openhash
openmodule.rb         openmodule
fileable.rb           fileable
expirable.rb          expirable
enumerablepass.rb     enumargs
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Deprecations Without Current Replacement&lt;/h2&gt;

&lt;p&gt;The libraries have been deprecated but do not yet have replacements.
Separate gems for these are planned though.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* bbcode.rb
* ini.rb
* settings.rb
* xmlhash.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Deprecations Merged Into CORE&lt;/h2&gt;

&lt;p&gt;These libraries have been deprecated because their functionality was merged into
the CORE library and/or made available in some another way.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* 1stclassmethod.rb   #method! and #instance_method! are now part of CORE.
* elementor.rb        #per has been added to CORE.
* elementwise.rb      #ewise has been added to CORE.
* consoleutils.rb     #ask is in CORE, for the rest see Ansi or Clio project.
* attr.rb             Added Module#attr_setter to CORE, and separated the rest in MORE.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;General Deprecations&lt;/h2&gt;

&lt;p&gt;These libraries have simply been deprecated because they were found lacking in
some significant fashion.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* nilstatus.rb        Poved rather useless, not to mention trivial.
* heap.rb             Heap was just an alias for PQueue anyway. Use 'pqueue' instead.
* dependency.rb       Other solutions exist that are much better (like Advisable).
* classmethods.rb     #class_extend solution is more robust.
* ziputils.rb         Have a look at Folio (gem install folio) for replacement.
* unheritable.rb      Implementation is trivial and usefulness questionable.
* instantise.rb       Replaced by instance_function.rb.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In addition to all this we've also taken some time to ensure Ruby Facets is more compatible
with Ruby 1.9 --indeed, at this point, it should be very close to fully compatibility. In
the process of doing this, btw, it has become clear that Ruby 1.9 picked up a good number
of methods already supported by Facets (some with the same exact names and some with
changed names). There's no way to know if Facets had any influence in these additions
to 1.9, but at the very least we can be sure that Facets contributed to &quot;airing the field&quot;
that led to their addition. That's a great thing, as it means Facets is directly contributing
to Ruby's future. I hope that will continue.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>New Website with Jekyll</title>
   <link href="/2009/07/21/new-website.html"/>
   <updated>2009-07-21T00:00:00-04:00</updated>
   <id>/2009/07/21/new-website</id>
   <content type="html">&lt;p&gt;The old Ruby Facets website was a static 100% XML/XSLT site. When I originally created
the site, I though XML/XSLT suredly was the pinnicale and proper way to build a
modern site --for no other reason that XSL is a pain in the ass! Well, we all know
the ultimate outcome of this story. XML/XSLT is turning out to be an exmplar of
over engineering by academics.&lt;/p&gt;

&lt;p&gt;The new Facets website runs of Jekyll, a static site generator supoprted by GitHub.
(another good site tool is Shunman)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>I Spy String#margin</title>
   <link href="/2008/10/10/string-margin.html"/>
   <updated>2008-10-10T00:00:00-04:00</updated>
   <id>/2008/10/10/string-margin</id>
   <content type="html">&lt;p&gt;Perhaps you've come across that occasional need to assign a string that was more pictorial
in character than textual. [ Pun intended :-) ] You've tried Ruby's various built-in string constructors,
including those groovy HERE documents, you even tried letting the HERE text butt up against column
zero. Ick! In the end you either had line after line of &lt;code&gt;str &amp;lt;&amp;lt; &quot;....&quot;&lt;/code&gt;, counted &quot;\n&quot;s
or said, &quot;Heck wit it!&quot;. And loaded from a file. Well, no longer! Facets contains a great little
String method called #margin. It works like this:&lt;/p&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%Q{&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        | This&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        |     is&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        |       margin controlled!&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        }&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Of course you can  use HERE documents if you prefer.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HERE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;        | This&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;        |     is&lt;/span&gt;
&lt;span class=&quot;sh&quot;&gt;        |       margin controlled!&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;        HERE&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;If you dislike the particular deliminator '|', or actually need to start lines with that character,
then just pick another.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%Q{ This&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        -     is&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        -       margin controlled too!&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;        }&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;margin&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;The trick? It uses the first non-whitespace character on the 2nd line(tm). Clever, eh?&lt;/p&gt;

&lt;p&gt;But wait. There's more! #margin also takes a parameter, with which you can specify the number of
extra spaces to insert in place of the deliminator. So even if you need to push some ascii art
text over 30 characters, there's no need for all that whitespace. Just specify the number.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Hope you've enjoyed this Spotlight. Now you too can produce nice and readable margin controlled
strings in your code too with ease!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>I Spy Integer#times_collect</title>
   <link href="/2008/04/04/times-collect.html"/>
   <updated>2008-04-04T00:00:00-04:00</updated>
   <id>/2008/04/04/times-collect</id>
   <content type="html">&lt;p&gt;The method #collect, or its alias #map if your prefer, is one of the most useful methods
in Rubyland. You see it all the time. Unfortunately it isn't applicable to a number of common
variants of iteration. One of these is Integer#times. So Facets provided just such a method.&lt;/p&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;facets/integer/times_collect&amp;#39;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;bottles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times_collect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bottle of Beer No. &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;This is also aliased as &lt;code&gt;times_map&lt;/code&gt;. But if either of these method names strikes you
as too long then you might find this alternate (required separately) more convenient:&lt;/p&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;facets/integer/of&amp;#39;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;bottles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Bottle of Beer No. &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Take one down, pass it around!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How Facets Was Born</title>
   <link href="/2008/01/01/how-facets-was-born.html"/>
   <updated>2008-01-01T00:00:00-05:00</updated>
   <id>/2008/01/01/how-facets-was-born</id>
   <content type="html">&lt;p&gt;As programmers are wont to do, I started collecting reusable pieces of
Ruby long ago. At first it was just a small function here, a useful
module there. Eventually the collection became sizable and I called it &lt;i&gt;TomsLib&lt;/i&gt;.
As time wore on and my library grew, I started to feel it worth a general
release and I had renamed it &lt;i&gt;Raspberry Lib&lt;/i&gt;. But sometime shortly thereafter
I hit upon the idea of &lt;i&gt;atomicity&lt;/i&gt;of the core extensions. And that's how the
name Facets came about -- it's all about the little things. Of course, that name
took a while to decide upon too. The library was almost called &quot;Atomix &amp;amp; Trix&quot;!&lt;/p&gt;

&lt;p&gt;Facets has eveolved considerably over the years --and lessons were learned. Probably
the biggest lesson was the 2.0 release, where the idea of atomicity was eroded and
and alternate means of library requiring was attempted. Both were rectified by 2.4.&lt;/p&gt;

&lt;p&gt;Much has changed since those first days. But time has been good to Facets.
Today, Facets is a more solid and leaner library than ever before and will
continue in the fashion for version to come.&lt;/p&gt;
</content>
 </entry>
 
</feed>

